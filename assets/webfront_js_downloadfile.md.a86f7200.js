import{_ as n,c as s,o as a,b as t}from"./app.edcb0ac8.js";const m='{"title":"\u4E0B\u8F7DBase64\u5B57\u7B26\u4E32\u683C\u5F0F\u6587\u4EF6","description":"","frontmatter":{},"headers":[{"level":3,"title":"\u4E0B\u8F7DBase64\u5B57\u7B26\u4E32\u683C\u5F0F\u6587\u4EF6","slug":"\u4E0B\u8F7Dbase64\u5B57\u7B26\u4E32\u683C\u5F0F\u6587\u4EF6"},{"level":3,"title":"\u901A\u8FC7ajax\u6587\u4EF6\u6D41\u65B9\u5F0F\u4E0B\u8F7D","slug":"\u901A\u8FC7ajax\u6587\u4EF6\u6D41\u65B9\u5F0F\u4E0B\u8F7D"}],"relativePath":"webfront/js/downloadfile.md"}',p={},o=t(`<h3 id="\u4E0B\u8F7Dbase64\u5B57\u7B26\u4E32\u683C\u5F0F\u6587\u4EF6" tabindex="-1">\u4E0B\u8F7DBase64\u5B57\u7B26\u4E32\u683C\u5F0F\u6587\u4EF6</h3><div class="language-js"><pre><code><span class="token comment">// \u5B57\u7B26\u4E32\u793A\u4F8B&#39;data:application/vnd.ms-excel;base64,UEsDBBQACAAIABGns07kSK2vGAEAA...&#39;</span>
<span class="token keyword">function</span> <span class="token function">getBlob</span> <span class="token punctuation">(</span><span class="token parameter">base64</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getContentType</span><span class="token punctuation">(</span>base64<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token function">b64toBlob</span><span class="token punctuation">(</span><span class="token function">getData</span><span class="token punctuation">(</span>base64<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getContentType</span><span class="token punctuation">(</span>base64<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">getContentType</span> <span class="token punctuation">(</span><span class="token parameter">base64</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">data:([^;]*);</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>base64<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">getData</span> <span class="token punctuation">(</span><span class="token parameter">base64</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> base64<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;base64,&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">7</span><span class="token punctuation">,</span> base64<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">b64toBlob</span> <span class="token punctuation">(</span><span class="token parameter">b64Data<span class="token punctuation">,</span> contentType<span class="token punctuation">,</span> sliceSize</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  contentType <span class="token operator">=</span> contentType <span class="token operator">||</span> <span class="token string">&#39;&#39;</span>
  sliceSize <span class="token operator">=</span> sliceSize <span class="token operator">||</span> <span class="token number">512</span>

  <span class="token keyword">var</span> byteCharacters <span class="token operator">=</span> <span class="token function">atob</span><span class="token punctuation">(</span>b64Data<span class="token punctuation">)</span>
  <span class="token keyword">var</span> byteArrays <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> offset <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> offset <span class="token operator">&lt;</span> byteCharacters<span class="token punctuation">.</span>length<span class="token punctuation">;</span> offset <span class="token operator">+=</span> sliceSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> slice <span class="token operator">=</span> byteCharacters<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>offset<span class="token punctuation">,</span> offset <span class="token operator">+</span> sliceSize<span class="token punctuation">)</span>

    <span class="token keyword">var</span> byteNumbers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>slice<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> slice<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      byteNumbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> slice<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">var</span> byteArray <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>byteNumbers<span class="token punctuation">)</span>

    byteArrays<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>byteArray<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">var</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span>byteArrays<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> contentType <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> blob
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">dwonlaodBase64StrFile</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> base64Str <span class="token operator">=</span> testStr<span class="token punctuation">,</span> fileName <span class="token operator">=</span> <span class="token string">&#39;aaa.txt&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// base64Text\u5C31\u662F\u540E\u7AEF\u8FD4\u56DE\u7684\u5B57\u7B26\u4E32\uFF0C\u8FD8\u9700\u8981\u7279\u6B8A\u5904\u7406\u4E0B,\u66FF\u6362\u6389\u5B57\u7B26\u4E32\u4E2D\u7684\u6362\u884C\u7B26\uFF0CIE\u8C8C\u4F3C\u4E0D\u8BC6\u522B\u4F1A\u62A5\u9519</span>
  <span class="token keyword">const</span> currentStr <span class="token operator">=</span> base64Str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\r\\n]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token function">getBlob</span><span class="token punctuation">(</span>currentStr<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&#39;download&#39;</span> <span class="token keyword">in</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> url <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span>
    <span class="token keyword">const</span> a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
    a<span class="token punctuation">.</span>href <span class="token operator">=</span> url
    a<span class="token punctuation">.</span>download <span class="token operator">=</span> fileName
    a<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">&#39;none&#39;</span>
    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
    a<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">revokeObjectURL</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>href<span class="token punctuation">)</span>
    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    navigator<span class="token punctuation">.</span><span class="token function">msSaveBlob</span><span class="token punctuation">(</span>blob<span class="token punctuation">,</span> fileName<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u901A\u8FC7ajax\u6587\u4EF6\u6D41\u65B9\u5F0F\u4E0B\u8F7D" tabindex="-1">\u901A\u8FC7ajax\u6587\u4EF6\u6D41\u65B9\u5F0F\u4E0B\u8F7D</h3><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">getFileName</span><span class="token punctuation">(</span><span class="token parameter">response<span class="token punctuation">,</span> customFileName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BC6\u522B\u6587\u4EF6\u540D</span>
    <span class="token keyword">var</span> fileName <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    <span class="token comment">// content-disposition\u4E00\u822C\u8FD4\u56DE\u6587\u4EF6\u540D\u4FE1\u606F</span>
    <span class="token keyword">const</span> disposition <span class="token operator">=</span> response<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;content-disposition&#39;</span><span class="token punctuation">]</span>
    <span class="token keyword">var</span> filenameRegex <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">filename[^;=\\n]*=(([&#39;&quot;]).*?\\2|[^;\\n]*)</span><span class="token regex-delimiter">/</span></span>
    <span class="token keyword">var</span> matches <span class="token operator">=</span> filenameRegex<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>disposition<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>matches <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> matches<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        fileName <span class="token operator">=</span> matches<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[&#39;&quot;]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
        fileName <span class="token operator">=</span> <span class="token function">decodeURI</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u81EA\u5B9A\u4E49\u6587\u4EF6\u540D</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>customFileName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        fileName <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> customFileName <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token operator">?</span> customFileName <span class="token operator">:</span> <span class="token function">customFileName</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> fileName
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">downloadArraybufferFile</span><span class="token punctuation">(</span><span class="token parameter">response<span class="token punctuation">,</span> customFileName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;\u4E0B\u8F7D\u5931\u8D25&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> enc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextDecoder</span><span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">const</span> message <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>enc<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token function">alert</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>response<span class="token punctuation">.</span>data<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> response<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;content-type&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">let</span> fileName <span class="token operator">=</span> <span class="token function">getFileName</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> customFileName<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&#39;download&#39;</span> <span class="token keyword">in</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> url <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span>
            <span class="token keyword">const</span> a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
            a<span class="token punctuation">.</span>href <span class="token operator">=</span> url
            a<span class="token punctuation">.</span>download <span class="token operator">=</span> fileName
            a<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">&#39;none&#39;</span>
            document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
            a<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">revokeObjectURL</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>href<span class="token punctuation">)</span>
            document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            navigator<span class="token punctuation">.</span><span class="token function">msSaveBlob</span><span class="token punctuation">(</span>blob<span class="token punctuation">,</span> fileName<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,4),e=[o];function c(l,u,k,i,r,d){return a(),s("div",null,e)}var y=n(p,[["render",c]]);export{m as __pageData,y as default};
