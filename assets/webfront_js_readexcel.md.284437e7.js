import{_ as n,c as s,o as a,b as t}from"./app.28d8f8df.js";const f='{"title":"js\u8BFB\u53D6excel\u6587\u4EF6","description":"","frontmatter":{},"headers":[],"relativePath":"webfront/js/readexcel.md"}',p={},o=t(`<h4 id="js\u8BFB\u53D6excel\u6587\u4EF6" tabindex="-1">js\u8BFB\u53D6excel\u6587\u4EF6</h4><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token constant">XLSX</span> <span class="token keyword">from</span> <span class="token string">&#39;xlsx&#39;</span>
<span class="token keyword">const</span> file <span class="token operator">=</span> file
<span class="token keyword">const</span> fileReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">fileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
fileReader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span>  <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result
    <span class="token keyword">const</span> workbook <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;binary&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> wsname <span class="token operator">=</span> workbook<span class="token punctuation">.</span>SheetNames<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment">// \u53D6\u7B2C\u4E00\u5F20\u8868</span>
    <span class="token keyword">const</span> ws <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">sheet_to_json</span><span class="token punctuation">(</span>workbook<span class="token punctuation">.</span>Sheets<span class="token punctuation">[</span>wsname<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// \u751F\u6210json\u8868\u683C\u5185\u5BB9</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;excel\u8868\u683C\u7B2C\u4E00\u9875\u6570\u636E:&#39;</span><span class="token punctuation">,</span> ws<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
fileReader<span class="token punctuation">.</span><span class="token function">readAsBinaryString</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>raw<span class="token punctuation">)</span>
</code></pre></div>`,2),e=[o];function c(l,k,u,r,i,d){return a(),s("div",null,e)}var w=n(p,[["render",c]]);export{f as __pageData,w as default};
